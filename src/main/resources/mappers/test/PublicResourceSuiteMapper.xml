<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qtone.util.dao.test.PublicResourceSuiteMapper" >
  <resultMap id="BaseResultMap" type="com.qtone.util.zxx.entity.PublicResourceSuite" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="grade_level_id" property="gradeLevelId" jdbcType="INTEGER" />
    <result column="subject_id" property="subjectId" jdbcType="INTEGER" />
    <result column="material_id" property="materialId" jdbcType="INTEGER" />
    <result column="grade_id" property="gradeId" jdbcType="INTEGER" />
    <result column="chapter_id" property="chapterId" jdbcType="INTEGER" />
    <result column="suite_name" property="suiteName" jdbcType="VARCHAR" />
    <result column="introduce" property="introduce" jdbcType="VARCHAR" />
    <result column="provider_id" property="providerId" jdbcType="INTEGER" />
    <result column="level_id" property="levelId" jdbcType="INTEGER" />
    <result column="used_type" property="usedType" jdbcType="INTEGER" />
    <result column="access_type" property="accessType" jdbcType="INTEGER" />
    <result column="is_show" property="isShow" jdbcType="INTEGER" />
    <result column="resource_num" property="resourceNum" jdbcType="INTEGER" />
    <result column="learn_num" property="learnNum" jdbcType="INTEGER" />
    <result column="play_num" property="playNum" jdbcType="INTEGER" />
    <result column="parise_num" property="pariseNum" jdbcType="INTEGER" />
    <result column="collection_num" property="collectionNum" jdbcType="INTEGER" />
    <result column="evaluate_num" property="evaluateNum" jdbcType="INTEGER" />
    <result column="evaluate_score" property="evaluateScore" jdbcType="REAL" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="delete_time" property="deleteTime" jdbcType="TIMESTAMP" />
    <result column="is_deleted" property="isDeleted" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, grade_level_id, subject_id, material_id, grade_id, chapter_id, suite_name, introduce, 
    provider_id, level_id, used_type, access_type, is_show, resource_num, learn_num, 
    play_num, parise_num, collection_num, evaluate_num, evaluate_score, create_time, 
    update_time, delete_time, is_deleted
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qtone.util.zxx.entity.PublicResourceSuiteExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from public_resource_suite
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from public_resource_suite
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from public_resource_suite
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.qtone.util.zxx.entity.PublicResourceSuiteExample" >
    delete from public_resource_suite
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qtone.util.zxx.entity.PublicResourceSuite" >
    insert into public_resource_suite (id, grade_level_id, subject_id, 
      material_id, grade_id, chapter_id, 
      suite_name, introduce, provider_id, 
      level_id, used_type, access_type, 
      is_show, resource_num, learn_num, 
      play_num, parise_num, collection_num, 
      evaluate_num, evaluate_score, create_time, 
      update_time, delete_time, is_deleted
      )
    values (#{id,jdbcType=INTEGER}, #{gradeLevelId,jdbcType=INTEGER}, #{subjectId,jdbcType=INTEGER}, 
      #{materialId,jdbcType=INTEGER}, #{gradeId,jdbcType=INTEGER}, #{chapterId,jdbcType=INTEGER}, 
      #{suiteName,jdbcType=VARCHAR}, #{introduce,jdbcType=VARCHAR}, #{providerId,jdbcType=INTEGER}, 
      #{levelId,jdbcType=INTEGER}, #{usedType,jdbcType=INTEGER}, #{accessType,jdbcType=INTEGER}, 
      #{isShow,jdbcType=INTEGER}, #{resourceNum,jdbcType=INTEGER}, #{learnNum,jdbcType=INTEGER}, 
      #{playNum,jdbcType=INTEGER}, #{pariseNum,jdbcType=INTEGER}, #{collectionNum,jdbcType=INTEGER}, 
      #{evaluateNum,jdbcType=INTEGER}, #{evaluateScore,jdbcType=REAL}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{deleteTime,jdbcType=TIMESTAMP}, #{isDeleted,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.qtone.util.zxx.entity.PublicResourceSuite" useGeneratedKeys="true" keyProperty="id">
    insert into public_resource_suite
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="gradeLevelId != null" >
        grade_level_id,
      </if>
      <if test="subjectId != null" >
        subject_id,
      </if>
      <if test="materialId != null" >
        material_id,
      </if>
      <if test="gradeId != null" >
        grade_id,
      </if>
      <if test="chapterId != null" >
        chapter_id,
      </if>
      <if test="suiteName != null" >
        suite_name,
      </if>
      <if test="introduce != null" >
        introduce,
      </if>
      <if test="providerId != null" >
        provider_id,
      </if>
      <if test="levelId != null" >
        level_id,
      </if>
      <if test="usedType != null" >
        used_type,
      </if>
      <if test="accessType != null" >
        access_type,
      </if>
      <if test="isShow != null" >
        is_show,
      </if>
      <if test="resourceNum != null" >
        resource_num,
      </if>
      <if test="learnNum != null" >
        learn_num,
      </if>
      <if test="playNum != null" >
        play_num,
      </if>
      <if test="pariseNum != null" >
        parise_num,
      </if>
      <if test="collectionNum != null" >
        collection_num,
      </if>
      <if test="evaluateNum != null" >
        evaluate_num,
      </if>
      <if test="evaluateScore != null" >
        evaluate_score,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="deleteTime != null" >
        delete_time,
      </if>
      <if test="isDeleted != null" >
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="gradeLevelId != null" >
        #{gradeLevelId,jdbcType=INTEGER},
      </if>
      <if test="subjectId != null" >
        #{subjectId,jdbcType=INTEGER},
      </if>
      <if test="materialId != null" >
        #{materialId,jdbcType=INTEGER},
      </if>
      <if test="gradeId != null" >
        #{gradeId,jdbcType=INTEGER},
      </if>
      <if test="chapterId != null" >
        #{chapterId,jdbcType=INTEGER},
      </if>
      <if test="suiteName != null" >
        #{suiteName,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null" >
        #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="providerId != null" >
        #{providerId,jdbcType=INTEGER},
      </if>
      <if test="levelId != null" >
        #{levelId,jdbcType=INTEGER},
      </if>
      <if test="usedType != null" >
        #{usedType,jdbcType=INTEGER},
      </if>
      <if test="accessType != null" >
        #{accessType,jdbcType=INTEGER},
      </if>
      <if test="isShow != null" >
        #{isShow,jdbcType=INTEGER},
      </if>
      <if test="resourceNum != null" >
        #{resourceNum,jdbcType=INTEGER},
      </if>
      <if test="learnNum != null" >
        #{learnNum,jdbcType=INTEGER},
      </if>
      <if test="playNum != null" >
        #{playNum,jdbcType=INTEGER},
      </if>
      <if test="pariseNum != null" >
        #{pariseNum,jdbcType=INTEGER},
      </if>
      <if test="collectionNum != null" >
        #{collectionNum,jdbcType=INTEGER},
      </if>
      <if test="evaluateNum != null" >
        #{evaluateNum,jdbcType=INTEGER},
      </if>
      <if test="evaluateScore != null" >
        #{evaluateScore,jdbcType=REAL},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteTime != null" >
        #{deleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null" >
        #{isDeleted,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qtone.util.zxx.entity.PublicResourceSuiteExample" resultType="java.lang.Integer" >
    select count(*) from public_resource_suite
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update public_resource_suite
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.gradeLevelId != null" >
        grade_level_id = #{record.gradeLevelId,jdbcType=INTEGER},
      </if>
      <if test="record.subjectId != null" >
        subject_id = #{record.subjectId,jdbcType=INTEGER},
      </if>
      <if test="record.materialId != null" >
        material_id = #{record.materialId,jdbcType=INTEGER},
      </if>
      <if test="record.gradeId != null" >
        grade_id = #{record.gradeId,jdbcType=INTEGER},
      </if>
      <if test="record.chapterId != null" >
        chapter_id = #{record.chapterId,jdbcType=INTEGER},
      </if>
      <if test="record.suiteName != null" >
        suite_name = #{record.suiteName,jdbcType=VARCHAR},
      </if>
      <if test="record.introduce != null" >
        introduce = #{record.introduce,jdbcType=VARCHAR},
      </if>
      <if test="record.providerId != null" >
        provider_id = #{record.providerId,jdbcType=INTEGER},
      </if>
      <if test="record.levelId != null" >
        level_id = #{record.levelId,jdbcType=INTEGER},
      </if>
      <if test="record.usedType != null" >
        used_type = #{record.usedType,jdbcType=INTEGER},
      </if>
      <if test="record.accessType != null" >
        access_type = #{record.accessType,jdbcType=INTEGER},
      </if>
      <if test="record.isShow != null" >
        is_show = #{record.isShow,jdbcType=INTEGER},
      </if>
      <if test="record.resourceNum != null" >
        resource_num = #{record.resourceNum,jdbcType=INTEGER},
      </if>
      <if test="record.learnNum != null" >
        learn_num = #{record.learnNum,jdbcType=INTEGER},
      </if>
      <if test="record.playNum != null" >
        play_num = #{record.playNum,jdbcType=INTEGER},
      </if>
      <if test="record.pariseNum != null" >
        parise_num = #{record.pariseNum,jdbcType=INTEGER},
      </if>
      <if test="record.collectionNum != null" >
        collection_num = #{record.collectionNum,jdbcType=INTEGER},
      </if>
      <if test="record.evaluateNum != null" >
        evaluate_num = #{record.evaluateNum,jdbcType=INTEGER},
      </if>
      <if test="record.evaluateScore != null" >
        evaluate_score = #{record.evaluateScore,jdbcType=REAL},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deleteTime != null" >
        delete_time = #{record.deleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDeleted != null" >
        is_deleted = #{record.isDeleted,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update public_resource_suite
    set id = #{record.id,jdbcType=INTEGER},
      grade_level_id = #{record.gradeLevelId,jdbcType=INTEGER},
      subject_id = #{record.subjectId,jdbcType=INTEGER},
      material_id = #{record.materialId,jdbcType=INTEGER},
      grade_id = #{record.gradeId,jdbcType=INTEGER},
      chapter_id = #{record.chapterId,jdbcType=INTEGER},
      suite_name = #{record.suiteName,jdbcType=VARCHAR},
      introduce = #{record.introduce,jdbcType=VARCHAR},
      provider_id = #{record.providerId,jdbcType=INTEGER},
      level_id = #{record.levelId,jdbcType=INTEGER},
      used_type = #{record.usedType,jdbcType=INTEGER},
      access_type = #{record.accessType,jdbcType=INTEGER},
      is_show = #{record.isShow,jdbcType=INTEGER},
      resource_num = #{record.resourceNum,jdbcType=INTEGER},
      learn_num = #{record.learnNum,jdbcType=INTEGER},
      play_num = #{record.playNum,jdbcType=INTEGER},
      parise_num = #{record.pariseNum,jdbcType=INTEGER},
      collection_num = #{record.collectionNum,jdbcType=INTEGER},
      evaluate_num = #{record.evaluateNum,jdbcType=INTEGER},
      evaluate_score = #{record.evaluateScore,jdbcType=REAL},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      delete_time = #{record.deleteTime,jdbcType=TIMESTAMP},
      is_deleted = #{record.isDeleted,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qtone.util.zxx.entity.PublicResourceSuite" >
    update public_resource_suite
    <set >
      <if test="gradeLevelId != null" >
        grade_level_id = #{gradeLevelId,jdbcType=INTEGER},
      </if>
      <if test="subjectId != null" >
        subject_id = #{subjectId,jdbcType=INTEGER},
      </if>
      <if test="materialId != null" >
        material_id = #{materialId,jdbcType=INTEGER},
      </if>
      <if test="gradeId != null" >
        grade_id = #{gradeId,jdbcType=INTEGER},
      </if>
      <if test="chapterId != null" >
        chapter_id = #{chapterId,jdbcType=INTEGER},
      </if>
      <if test="suiteName != null" >
        suite_name = #{suiteName,jdbcType=VARCHAR},
      </if>
      <if test="introduce != null" >
        introduce = #{introduce,jdbcType=VARCHAR},
      </if>
      <if test="providerId != null" >
        provider_id = #{providerId,jdbcType=INTEGER},
      </if>
      <if test="levelId != null" >
        level_id = #{levelId,jdbcType=INTEGER},
      </if>
      <if test="usedType != null" >
        used_type = #{usedType,jdbcType=INTEGER},
      </if>
      <if test="accessType != null" >
        access_type = #{accessType,jdbcType=INTEGER},
      </if>
      <if test="isShow != null" >
        is_show = #{isShow,jdbcType=INTEGER},
      </if>
      <if test="resourceNum != null" >
        resource_num = #{resourceNum,jdbcType=INTEGER},
      </if>
      <if test="learnNum != null" >
        learn_num = #{learnNum,jdbcType=INTEGER},
      </if>
      <if test="playNum != null" >
        play_num = #{playNum,jdbcType=INTEGER},
      </if>
      <if test="pariseNum != null" >
        parise_num = #{pariseNum,jdbcType=INTEGER},
      </if>
      <if test="collectionNum != null" >
        collection_num = #{collectionNum,jdbcType=INTEGER},
      </if>
      <if test="evaluateNum != null" >
        evaluate_num = #{evaluateNum,jdbcType=INTEGER},
      </if>
      <if test="evaluateScore != null" >
        evaluate_score = #{evaluateScore,jdbcType=REAL},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteTime != null" >
        delete_time = #{deleteTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null" >
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qtone.util.zxx.entity.PublicResourceSuite" >
    update public_resource_suite
    set grade_level_id = #{gradeLevelId,jdbcType=INTEGER},
      subject_id = #{subjectId,jdbcType=INTEGER},
      material_id = #{materialId,jdbcType=INTEGER},
      grade_id = #{gradeId,jdbcType=INTEGER},
      chapter_id = #{chapterId,jdbcType=INTEGER},
      suite_name = #{suiteName,jdbcType=VARCHAR},
      introduce = #{introduce,jdbcType=VARCHAR},
      provider_id = #{providerId,jdbcType=INTEGER},
      level_id = #{levelId,jdbcType=INTEGER},
      used_type = #{usedType,jdbcType=INTEGER},
      access_type = #{accessType,jdbcType=INTEGER},
      is_show = #{isShow,jdbcType=INTEGER},
      resource_num = #{resourceNum,jdbcType=INTEGER},
      learn_num = #{learnNum,jdbcType=INTEGER},
      play_num = #{playNum,jdbcType=INTEGER},
      parise_num = #{pariseNum,jdbcType=INTEGER},
      collection_num = #{collectionNum,jdbcType=INTEGER},
      evaluate_num = #{evaluateNum,jdbcType=INTEGER},
      evaluate_score = #{evaluateScore,jdbcType=REAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      delete_time = #{deleteTime,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>